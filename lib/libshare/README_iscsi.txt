This is iSCSI support for the IET, SCST and STGT iSCSI target implementations.

     IET	http://iscsitarget.sourceforge.net
     SCST	http://scst.sourceforge.net
     STGT	http://stgt.berlios.de

It will call ietmadm (for IET), tgtadm (for STGT) or modify files in
/sys/kernel/scst_tgt (for SCST) to both add or remove a iSCSI target
from the call to 'zfs share':

  zfs create -s -V10G mypool/test
  zfs set shareiscsi=on mypool/test

There is no need to issue 'zfs share tank/test', because ZFS will
automatically issue the corresponding share command(s) when setting
(or modifying) the shareiscsi property.


The driver will execute the following commands (example!):

  /usr/sbin/ietadm --op new --tid TID --params Name=iqn.2010-09.org.zfsonlinux:mypool.test
  /usr/sbin/ietadm --op new --tid TID --lun LUN --params Path=/dev/zvol/mypool/test,Type=fileio

or for STGT:

  tgtadm --lld iscsi --op new  --mode target      --tid TID -T iqn.2010-09.org.zfsonlinux:share.test
  tgtadm --lld iscsi --op new  --mode logicalunit --tid TID --lun 1 -b /dev/zvol/mypool/test
  tgtadm --lld iscsi --op bind --mode target      --tid TID --initiator-address ALL

and the equivalent for SCST:

  echo "add_target iqn.2010-09.org.zfsonlinux:mypool.test" > /sys/kernel/scst_tgt/targets/iscsi/mgmt
  echo "add_device DEVICE filename=/dev/zvol/mypool/test; blocksize=BLOCKSIZE" > /sys/kernel/scst_tgt/handlers/vdisk_blockio/mgmt
  echo "add DEVICE LUN" > /sys/kernel/scst_tgt/targets/iscsi/iqn.2010-09.org.zfsonlinux:mypool.test/luns/mgmt
  echo 1 > /sys/kernel/scst_tgt/targets/iscsi/iqn.2010-09.org.zfsonlinux:mypool.test/enabled

Here the value DEVICE is generated by iscsi.c:iscsi_generate_scst_device_name()
and is a randomized value, based on the exact time of day when
called. This because SCST have a limit of 16 characters for the device
name, and the chances ov have duplicates is large. The BLOCKSIZE that
is used depends on what blocksize the ZVOL was created with.

The LUN value is by default 0 (1 for STGT becase LUN0 is the controller),
but can be overridden using the 'lun' option to the 'shareiscsi' property.

It (the driver) will automatically calculate the TID and IQN and use
only the ZVOL (in this case 'share/test') in the command lines.

If autogenerating the IQN is not wanted, a hardcoded default
can be set in /etc/iscsi_target_id like so:

  echo iqn.2010-09.org.zfsonlinux > /etc/iscsi_target_id

Then all targets will start with this value, only adding a colon
and the ZVOL/dataset name (slashes replaced with dots):

  iqn.2010-09.org.zfsonlinux:mypool.test


In addition to executing ietadm, tgtadm or modifying files below
/sys/kernel/scst_tgt, zfs will execute the following script (if it
exist and is executable) '/sbin/zfs_share_iscsi.sh', like so:

  /sbin/zfs_share_iscsi.sh TID

This is so that one can create custom commands to be done on the
share.

The only parameter to this script is the TID and the driver will
'execute and forget'. Meaning, it will not care about exit code nor
any output it gives.

Example scripts have been provided, on for each of the iSCSI
implementation supported:

    zfs_share_iscsi.iet
    zfs_share_iscsi.scst
    zfs_share_iscsi.stgt

PS. The domainname needs to be set (in /proc/sys/kernel/domainname
    using either 'sysctl', 'echo' or the command 'domainname') for
    the driver to be able to work out the iqn correctly.

    NOTE: This is only required if the IQN haven't been set in the
    	  /etc/iscsi_target_id file!
